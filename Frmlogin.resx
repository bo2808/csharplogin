<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>